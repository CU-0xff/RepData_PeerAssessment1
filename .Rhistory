set.seed(1)
rpois(5,2)
?rnorm
?rpois
set.seed(10)
x <- rep(0:1, each=5)
e <- rnorm(10,0,20)
y <- 0.5+2*x+e
?rnorm
library(datasets)
x1 <- 5
x2 <- 6
Rprof()
fit <- lm(y ~ x1 + x2)
?lm
?summaryRprof
x <- rep(0:1, each=5)
Rprof(NULL)
summaryRprof()
?system.time
filename <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", filename, method="curl")
q1_data <- read.csv(filename)
View(`q1_data`)
strsplit(colnames(q1_data),"wgtp", fixed=TRUE)[123]
filename <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", filename, method="curl")
q2_data <- read.csv(filename)
View(`q2_data`)
q2_data <- read.csv(filename, skip=4, nrows=191)
View(`q2_data`)
q2_data <- read.csv(filename,  nrows=190)
View(`q2_data`)
q2_data <- read.csv(filename,  skip=4, nrows=190)
View(`q2_data`)
q2_data$converted <- mapply(function(x) <- unlist(strsplit(x, split=",", fixed=TRUE), q2_data$X.4)
q2_data$converted <- mapply(function(x) unlist(strsplit(x, split=",", fixed=TRUE)), q2_data$X.4)
q2_data$converted <- mapply(function(x) unlist(strsplit(x, split=',' , fixed=TRUE)), q2_data$X.4)
str(q2_data)
q2_data$converted <- mapply(function(x) unlist(strsplit(as.character(x), split=',' , fixed=TRUE)), q2_data$X.4)
View(`q2_data`)
q2_data$converted <- mapply(function(x) paste(unlist(strsplit(as.character(x), split=',' , fixed=TRUE)), sep=""), q2_data$X.4)
View(`q2_data`)
q2_data$converted <- mapply(function(x) as.numeric(gsub(",","", as.character(x))), q2_data$X.4)
View(`q2_data`)
mean(q2_data$converted)
which(mapply(function(x) grep("^United", x), q2_data$X.3))
mapply(function(x) grep("^United", x), q2_data$X.3)
sum(mapply(function(x) grep("^United", x), q2_data$X.3))
which(mapply(function(x) grep("^United", x), q2_data$X.3))
which(mapply(function(x) grep("^United", x), q2_data$X.3)==1)
filename <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", filename, method="curl")
q4_data <- read.csv(filename)
View(`q4_data`)
q4_merged <- merge(q2_data, q4_data, by.x ="X", by.y = "CountryCode")
View(`q4_merged`)
which(mapply(function(x) grep("Fiscal year end: June", x), q4_merged$Special.Notes)==TRUE)
size(which(mapply(function(x) grep("Fiscal year end: June", x), q4_merged$Special.Notes)==TRUE))
length(which(mapply(function(x) grep("Fiscal year end: June", x), q4_merged$Special.Notes)==TRUE))
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN", auto.assign=FALSE)
sampleTimes = index(amzn)
View(amzn)
str(amzn)
amzn$date <- rownames(amzn)
View(amzn)
amzn$date <- as.date(rownames(amzn))
amzn$date <- as.POSIXct(rownames(amzn))
amzn$date <- strptime(rownames(amzn), "%Y-%m-%d")
View(amzn)
strptime(rownames(amzn), "%Y-%m-%d")
strptime(rownames(amzn)[1], "%Y-%m-%d")
rownames(amzn)
View(amzn)
amzn$row.names
amzn$AMZN.Open
rownames(amzn$AMZN.Open)
amzn$AMZN.Open[1]
amzn$AMZN.Open[,1]
dimnames(amzn$AMZN.Open)
dimnames(amzn$AMZN.Open[1])
row.names(amzn$AMZN.Open)
attributes(amzn)
str(amzn)
attributes(amzn)
new_amzn <- data.frame(amzn)
View(new_amzn)
str(new_amzn)
rownames(new_amzn)
new_amzn$date <- rownames(new_amzn)
View(new_amzn)
strptime(new_amzn$date, "%Y-%m-%d")
new_amzn$date <- strptime(new_amzn$date, "%Y-%m-%d")
View(new_amzn)
which(mapply(function(x) format(as.yearmon(x), "%Y")=="2012", new_amzn$date))
mapply(function(x) format(as.yearmon(x), "%Y")=="2012", new_amzn$date)
format(as.yearmon(new_amzn$date[1]), "%Y")
mapply(function(x) format(as.yearmon(x), "%Y")=="2012", new_amzn$date)
mapply(function(x) print(x), new_amzn$date)
mapply(function(x) format(as.yearmon(as.POSIXct(x)), "%Y")=="2012", new_amzn$date)
mapply(function(x) format(as.yearmon(x), "%Y")=="2012", new_amzn$date)
mapply(function(x) as.numeric(format(x, "%Y"))==2012, new_amzn$date)
mapply(function(x) print(as.numeric(format(x, "%Y"))), new_amzn$date)
mapply(function(x) print(format(x, "%Y")), new_amzn$date)
format(new_amzn$date[1], "%Y")
new_amzn$year <- format(new_amzn$date, "%Y")
View(new_amzn)
str(new_amzn)
new_amzn[,year=="2012"]
new_amzn[,new_amzn$year=="2012"]
amzn_12 <- subset(new_amzn, year == "2012")
View(amzn_12)
weekdays(amzn_12$date)
which(weekdays(amzn_12$date)=="Monday")
length(which(weekdays(amzn_12$date)=="Monday"))
library(nlme)
library(lattice)
xyplot(weight ~Time | Diet, BodyWeight)
?trellis.par.set
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
load.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
x <- rbind(matrix(rnorm(100, sd=.3), ncol=2), matrix(rnorm(100, mean=1, sd=.3), ncol=2))
x
fit <- kmeans(x,10)
fit
setwd("~/Documents/learning/coursera/R/RepData_PeerAssessment1")
data = read.csv("activity.csv", header=TRUE, sep=",", na.strings ="NA")
str(data)
data$date = as.Date(data$Date)
data$date = as.Date(data$Date, "%Y-%M-%D")
data$Date
data$date = as.Date(data$date, "%Y-%M-%D")
data = read.csv("activity.csv", header=TRUE, sep=",", na.strings ="NA")
data$date = as.Date(data$date)
head(data)
tail(data)
View(data)
na.omit(data)
aggregate(data, date, sum)
aggregate(data$steps, . ~ date, sum)
aggregate(. ~ date, data=data, sum)
day_total <- aggregate(. ~ date, data=data, sum)
hist(day_total$steps)
View(data)
interval_avg <- aggregate(. ~ interval, data=data[,c("steps","interval")], mean)
pmax(data=data[,c("steps","interval")])
pmax(interval_avg[,c("steps","interval")])
max(interval_avg$steps)
pmax(interval_avg)
max(interval_avg)
max_interval_avg <- max(interval_avg$steps)
interval_max_avg <- interval_avg[,steps=max_interval_avg]
max_interval_avg <- max(interval_avg$steps)
interval_max_avg <- interval_avg[,steps=max_interval_avg]
interval_max_avg <- interval_avg[,steps==max_interval_avg]
interval_max_avg <- interval_avg[,interval_avg$steps==max_interval_avg]
interval_max_avg <- interval_avg[,which.max(interval_avg$steps)]
interval_max_avg <- interval_avg[which.max(interval_avg$steps),]
interval_max_avg <- interval_avg[which.max(interval_avg$steps),interval_avg$interval]
interval_max_avg <- interval_avg[which.max(interval_avg$steps),c("interval")]
replace_NA <- function(interval_input) { interval_avg[interval_avg$interval=interval_input,c("steps")]}
replace_NA <- function(interval_input) { interval_avg[interval_avg$interval==interval_input,c("steps")]}
replace_NA(0)
replace_NA(500)
replace_NA(510)
replace_NA(2000)
str(replace_NA(1000))
activity_imp <- apply(activity,1,print )
activity_imp <- apply(data, 1, print )
activity_imp <- apply(data, 1, function(x) -> if(is.NA(x$steps)) {replace_NA(x$interval)} else {x$steps} )
activity_imp <- apply(data, 1, function(x) if(is.NA(x$steps)) {replace_NA(x$interval)} else {x$steps} )
activity_imp <- apply(data, 1, function(x) if(is.na(x$steps)) {replace_NA(x$interval)} else {x$steps} )
activity_imp <- apply(data, 1, function(x) if(is.na(x["steps"])) {replace_NA(x["interval"])} else {x["steps"]} )
activity_imp <- data
activity_imp$steps <- apply(data, 1, function(x) if(is.na(x["steps"])) {replace_NA(x["interval"])} else {x["steps"]} )
activity_imp <- data
activity_imp <- data
activity_imp$steps <- unlist(apply(data, 1, function(x) if(is.na(x["steps"])) {replace_NA(x["interval"])} else {x["steps"]} ))
apply(data, 1, function(x) if(is.na(x["steps"])) {replace_NA(x["interval"])} else {x["steps"]} )
temp <- apply(data, 1, function(x) if(is.na(x["steps"])) {replace_NA(x["interval"])} else {x["steps"]} )
temp <- unlist(temp)
temp <- apply(data, 1, function(x) if(is.na(x["steps"])) {replace_NA(x["interval"])} else {x["steps"]} )
vec_temp <- unlist(temp)
vec_temp = unlist(temp)
str(vec_temp)
vec_temp[1]
str(vec_temp[1])
vec_temp <- as.Numeric(vec_temp)
vec_temp <- as.numeric(vec_temp)
activity_imp <- data
activity_imp$steps <- vec_temp
str(vec_temp)
temp <- apply(data, 1, function(x) if(is.na(x["steps"])) {replace_NA(x["interval"])} else {x["steps"]} )
vec_temp = unlist(temp)
vec_temp <- as.numeric(vec_temp)
vec_temp = unlist(temp)
str(vec_temp)
str(temp)
temp <- apply(data, 1, function(x) if(is.na(x["steps"]) or is.null(x["steps"])) {replace_NA(x["interval"])} else {x["steps"]} )
temp <- apply(data, 1, function(x) if(is.na(x["steps"]) || is.null(x["steps"])) {replace_NA(x["interval"])} else {x["steps"]} )
vec_temp <- unlist(temp)
length(vec_temp)
activity_imp <- I(temp)
activity_imp <- data
activity_imp$steps <- I(temp)
rapply(temp,c)
vec_temp <- rapply(temp,c)
str(vec_temp)
str(temp)
length(temp)
length(rapply(temp,c))
length(rapply(temp,c, how="list"))
vec_temp <- rapply(temp,c, how="list")
temp2 <- cbind(activity_imp, temp)
length(temp)
length(activity_imp)
temp2 <- rbind(activity_imp, temp)
activity_imp <- data
temp2 <- rbind(activity_imp, temp)
activity_imp <- data
temp2 <- cbind(activity_imp, temp)
temp <- sapply(data, 1, function(x) if(is.na(x["steps"]) || is.null(x["steps"])) {replace_NA(x["interval"])} else {x["steps"]} )
temp <- sapply(data, function(x) if(is.na(x["steps"]) || is.null(x["steps"])) {replace_NA(x["interval"])} else {x["steps"]} )
View(temp)
temp <- apply(data, 1, function(x) if(is.na(x["steps"]) || is.null(x["steps"])) {replace_NA(x["interval"])} else {x["steps"]} )
temp <- as.numeric(temp)
temp[is.na(temp)] <- 0
vec_temp <- unlist(temp)
mean(vec_temp)
replace_NA <- function(interval_input) { as.Numeric(interval_avg[interval_avg$interval==interval_input,c("steps")])}
temp <- sapply(data, 1, function(x) if(is.na(x["steps"]) || is.null(x["steps"])) {replace_NA(x["interval"])} else {x["steps"]} )
temp <- apply(data, 1, function(x) if(is.na(x["steps"]) || is.null(x["steps"])) {replace_NA(x["interval"])} else {x["steps"]} )
replace_NA <- function(interval_input) { as.numeric(interval_avg[interval_avg$interval==interval_input,c("steps")])}
temp <- apply(data, 1, function(x) if(is.na(x["steps"]) || is.null(x["steps"])) {replace_NA(x["interval"])} else {x["steps"]} )
length(unlist(temp))
